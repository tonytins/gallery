@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
<div class="card shadow-sm @DarkModeCss" style="width: 18em; margin-bottom: 10px;">
    <img class="card-img-top" width="286" height="190" src="@Image" />
    <div class="card-body">
        <h4 class="card-title">@Name</h4>
        <p class="card-text">
            <div class="row">
                <div class="col">Origin: @Origin</div>
            </div>
            <div class="row">
                <div class="col">Archetype: @Archetype</div>
            </div>
            @if (!string.IsNullOrEmpty(Affilation))
            {
<div class="row">
    <div class="col">
        Affilation: @Affilation
    </div>
</div>}

        </p>
        <h5 class="card-title">Powers</h5>
        <p class="card-text">
            <div class="row">
                <div class="col">
                    Primary: @Primary
                </div>
            </div>
            <div class="row">
                <div class="col">
                    Secondary: @Secondary
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Supplemental))
            {
<div class="row">
    <div class="col">
        Supplemental: @Supplemental
    </div>
</div>}
        </p>
        <div class="row">
            <div class="col"></div>
            <div class="col-lg">
                <a href="@ServerLink" class="btn btn-primary tins-hoz-center">@ServerName</a>
            </div>
            <div class="col"></div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(ServerShard))
    {
<div class="card-footer"><small>Shard: @ServerShard</small></div>}
</div>

@code { [Parameter] public string Name { get; set; }

    [Parameter] public string Image { get; set; }

    [Parameter] public string ServerShard { get; set; }

    [Parameter] public string ServerName { get; set; }

    [Parameter] public string ServerLink { get; set; }

    [Parameter] public string Origin { get; set; }

    [Parameter] public string Archetype { get; set; }

    [Parameter] public string Affilation { get; set; }

    [Parameter] public string Primary { get; set; }

    [Parameter] public string Secondary { get; set; }

    [Parameter] public string Supplemental { get; set; }

    bool IsDarkMode => localStorage.GetItem<bool>("darkmode");
    string DarkModeCss => IsDarkMode ? Themes.DarkCards : Themes.Light; }
