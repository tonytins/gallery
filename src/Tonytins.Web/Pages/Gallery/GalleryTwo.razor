@page "/v2/gallery/{Name}"
@using Tonytins.Models
@using Tonytins.Web.Components
@inject HttpClient Http
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
<AlertComponent Display=@true Message="This feature is in preview." />
<AlertComponent Display=@DisplayAlert Alert=@AlertType.Warning Message=@AlertMessage />
<div class="text-right">
    <span class="badge @DarkModeBadgeCss"><span class="fa fa-photo-video"></span> @CountArt</span>
</div>
@if (!string.IsNullOrEmpty(PageName))
{
<h2>@PageName</h2>}
@if (!string.IsNullOrEmpty(PageDescription))
{@((MarkupString) PageDescription)
                    <hr />
}
<div style="margin: 0 auto; margin-top: 10px;">
    @if (art == null)
    {
<LoadingComponent /> }
else
{
<div class="card-columns">
    @foreach (var art in art)
    {
        var permalink = $"doc/{art.Key}";
<GalleryComponent Title=@art.Title
                  Image=@SiteHelper.ImageCDN(art.Image, Name)
                  Permalink=@permalink
                  VersionTwo=@true
                  Copyrights=@art.Copyrights
                  Credits=@art.Credits />}
</div>}
</div>
@code { GalleryModel[] art;

    [Parameter] public string Name { get; set; }

    string PageDescription { get; set; }
    string PageName { get; set; }
    string AlertMessage { get; set; }
    bool DisplayAlert { get; set; }
    int CountArt { get; set; } = 0;

    bool IsDarkMode => localStorage.GetItem<bool>("darkmode");
    string DarkModeBadgeCss => IsDarkMode ? "badge-secondary" : "badge-primary";

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var gallery = await Http.GetFromJsonAsync<GalleryTwoModel>(SiteHelper.JsonCDN($"v2/{Name}"));
            PageDescription = SiteHelper.MarkdownToHtml(gallery.Description);
            PageName = gallery.Title;
            art = gallery.Artwork;
            foreach (var art in art)
                CountArt++;
        }
        catch (Exception err)
        {
            AlertMessage = err.Message;
            DisplayAlert = true;
        }
    } }
