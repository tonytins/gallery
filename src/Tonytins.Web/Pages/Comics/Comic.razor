@page "/comic/{Database}/{Key}"
@using Tonytins.Models
@using Tonytins.Models.Gallery
@using Tonytins.Web.Components
@inject HttpClient Http
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
<TitleHelper Name=@PageName />
<AlertComponent Display=@DisplayAlert Alert=@AlertType.Warning Message=@AlertMessage />
@if (!IsReady)
{
<LoadingComponent /> }
            else
            {
<div class="row justify-content-center">
    <div class="col-sm">
    </div>
    <div class="col-lg">
        <div class="media-display">
            <img class="submission" src=@SiteHelper.ImageCDN(Image, $@"comics/{Database}") />
        </div>
    </div>
    <div class="col-sm">
    </div>
</div>

                <div class="row flex-lg-column">
                    <div class="col-sm"></div>
                    <div class="col-lg">
                        <div class="container text-center">
                            @if (!string.IsNullOrEmpty(Back))
                            {
            <h4 class="d-inline-block">
                <a href="/comic/@Database/@Back" class="@DarkModeText">
                    <span class="fa fa-arrow-left"></span>
                </a>
            </h4>}
                            <h3 class="d-inline-block"><a href="/comics/@Database" class="@DarkModeText d-inline-block"></a>@PageName</h3>
                            @if (!string.IsNullOrEmpty(Forward))
                            {
            <h4 class="d-inline-block">
                <a href="/comic/@Database/@Forward" class="@DarkModeText">
                    <span class="fa fa-arrow-right"></span>
                </a>
            </h4>}
                        </div>
                        @if (!string.IsNullOrEmpty(Credits) || !string.IsNullOrEmpty(Copyrights))
                        {
        <div class="container">

            @if (!string.IsNullOrEmpty(Copyrights))
            {
<div class="row">
    <div class="col"><small class="text-muted">@Copyrights</small></div>
</div>}

        </div>}
                    </div>
                    <div class="col-sm"></div>
                </div>}
<hr />

@code { [Parameter] public string Key { get; set; }
    [Parameter] public string Database { get; set; }

    string Image { get; set; }
    string Description { get; set; }
    string Forward { get; set; }
    string Back { get; set; }
    string PageName { get; set; }
    string Credits { get; set; }
    string Copyrights { get; set; }
    string AlertMessage { get; set; }
    bool DisplayAlert { get; set; }
    bool IsReady { get; set; } = false;

    bool IsDarkMode => localStorage.GetItem<bool>("darkmode");
    string DarkModeText => IsDarkMode ? "text-light" : "text-dark";

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var gallery = await Http.GetFromJsonAsync<GalleryBase<ComicsModel>>(SiteHelper.JsonCDN(Database, @"prod/comics/"));
            PageName = gallery.Title;

            foreach (var art in gallery.Gallery)
            {
                if (Key == art.Key)
                {
                    Image = art.Image;
                    Forward = art.Forward;
                    Back = art.Backward;
                    Credits = art.Credits;
                    Copyrights = art.Copyrights;
                }
            }

            IsReady = true;
        }
        catch (Exception err)
        {
            AlertMessage = err.Message;
            DisplayAlert = true;
        }
    }}
