@page "/diagnostics"
@page "/settings"
@using System.Runtime.InteropServices;
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
<h2>Settings</h2>
<div class="container container-fluid">
    <div class="row">
        <div class="col">
            <h3>System</h3>
            <p>Framework: @RuntimeInformation.FrameworkDescription</p>
        </div>
        <div class="col">
            <h3>Git</h3>
            <p>Repository: <a href=@SanitizeRepoUrl>@SanitizeRepoUrl</a></p>
            <p>Commit: <a href=@CommitUrl>@ThisAssembly.Git.Sha</a></p>
            <p>Branch: <a href=@BranchUrl>@ThisAssembly.Git.Branch</a></p>
        </div>
    </div>
</div>

@code { static string SanitizeRepoUrl
    {
        get
        {
            var repo = ThisAssembly.Git.RepositoryUrl;
            return repo.Substring(0, repo.Length - 3);
        }
    }

    bool IsDarkMode
    {
        get
        {
            return localStorage.GetItem<bool>("darkmode");
        }
        set
        {
            localStorage.SetItem("darkmode", value);
        }
    }

    void ToggleDarkMode()
    {
        IsDarkMode = !IsDarkMode;
    } 

    string BtnDarkMode => IsDarkMode ? "btn-light" : "btn-secondary";

    string BranchUrl = $@"{SanitizeRepoUrl}/tree/{@ThisAssembly.Git.Branch}";
    string CommitUrl = $@"{SanitizeRepoUrl}/commit/{@ThisAssembly.Git.Sha}";}
